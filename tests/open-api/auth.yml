openapi: '3.0.3'
info:
  title: User Authentication API
  description: API for user authentication operations.
  version: '1.0.0'
servers:
  - url: http://localhost:3333
    description: Local development server
  - url: https://api.sinergiabadisentosa.com
    description: Network production server

paths:
  /login:
    post:
      summary: Authenticate user and generate token
      description: Endpoint to authenticate a user with credentials (NIK and password) and generate an access token.
      requestBody:
        description: JSON object containing user credentials (NIK and password)
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nik:
                  type: string
                  description: User NIK
                  example: "24020007"
                password:
                  type: string
                  format: password
                  description: User password
                  example: "password123"
              required:
                - nik
                - password
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for future authentication
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Invalid credentials or missing fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid NIK or password"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Server error, please try again later."

  /user-auth:
    get:
      summary: Get current authenticated user details
      description: Endpoint to retrieve details of the currently authenticated user. Requires a valid JWT token.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved user details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: User ID
                    example: 1
                  nik:
                    type: string
                    description: User NIK
                    example: "24020007"
                  name:
                    type: string
                    description: User name
                    example: "John Doe"
                  email:
                    type: string
                    description: User email
                    example: "johndoe@example.com"
        '401':
          description: Unauthorized - Token is invalid or missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized. Token is invalid or expired."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Server error, please try again later."

  /user-update/{id}:
    put:
      summary: Update user credentials
      description: Update the NIK and password for an existing user. Requires a valid JWT token.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: integer
            example: 1
      requestBody:
        description: JSON object containing updated user credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nik:
                  type: string
                  description: Updated user NIK
                  example: "24020008"
                password:
                  type: string
                  format: password
                  description: Updated user password
                  example: "newPassword123"
              required:
                - nik
                - password
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User credentials updated successfully."
        '400':
          description: Invalid input or user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid input or user not found."
        '401':
          description: Unauthorized - Token is invalid or missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized. Token is invalid or expired."
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Server error, please try again later."

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
